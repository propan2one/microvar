/*
* This configuration file is for local runs
*/

conda.enabled = true

manifest {
    name            = 'microvar'
    author          = 'Jean DELMOTTE'
    homePage        = 'https://github.com/propan2one/microvar'
    description     = 'Variant calling pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '0.1.0'
}

// Pipeline parameters ---------------------------------------------------------
params {
    samplesheet     = null  // Make it null by default
    outdir          = './results'
    
    // Boilerplate options
    publish_dir_mode = 'copy'
    enable_conda     = true
    singularity_pull_docker_container = false
}

// Load base.config by default for all pipelines -------------------------------
includeConfig 'conf/base.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

// Pipeline profiles -----------------------------------------------------------
profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        cacheDir = './conda_cache'
        createTimeout = '1 h'
        useMamba = true
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        runOptions= "-v $HOME:$HOME"
        docker.enabled         = false
        docker.userEmulation   = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}

executor {
    name = 'local'
    cpus   = 4
    memory = '10GB'
}

// Capture Nextflow log files --------------------------------------------------
/*
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    // file = "${params.outdir}/pipeline_info/execution_timeline.html"
    file = "./pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    file = "./pipeline_info/execution_report.html"
}
trace {
    enabled = true
    file = "./pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    file = "./pipeline_info/pipeline_dag.svg"
}
    */

process {

    withName: 'FASTP' {
        //container = 'quay.io/biocontainers/fastp:0.23.4--h5f740d0_0'
		container = 'community.wave.seqera.io/library/fastp:0.23.4--f8cefc1e5f7a782e'
        cpus = 3
        memory = 4.GB
    }

    withName: 'BWA_INDEX' {
        //container = 'quay.io/biocontainers/bwa:0.7.3a--hed695b0_5'
		container = 'community.wave.seqera.io/library/bwa:0.7.18--37afaef6d7284afe'
        cpus = 1
        memory = 4.GB
    }

    withName: 'SAMTOOLS_FAIDX' {
        //container = 'quay.io/biocontainers/samtools:1.7--2'
		container = 'community.wave.seqera.io/library/samtools:1.21--0d76da7c3cf7751c'
        cpus = 1
        memory = 4.GB
    }

    withName: 'BWA_MEM' {
        //container = 'quay.io/biocontainers/mulled-v2-fe8faa35dbf6dc65a0f7f5d4ea12e31a79f73e40:219b6c272b25e7e642ae3ff0bf0c5c81a5135ab4-0'
		container = 'community.wave.seqera.io/library/bwa_samtools:9aa8b5c4ec1a55e0'
        cpus = 4
        memory = 4.GB
    }

    withName: 'BCFTOOLS_CALL' {
        //container = 'quay.io/biocontainers/bcftools:1.18--h8b25389_0'
		container = 'community.wave.seqera.io/library/bcftools:1.21--4335bec1d7b44d11'
        cpus = 4
        memory = 6.GB
    }

}


